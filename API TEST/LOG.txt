C:\Users\Burak\.jdks\openjdk-21.0.2\bin\java.exe "-javaagent:D:\IntelliJ IDEA Community Edition 2023.3.2\lib\idea_rt.jar=64491:D:\IntelliJ IDEA Community Edition 2023.3.2\bin" -Dfile.encoding=UTF-8 -Dsun.stdout.encoding=UTF-8 -Dsun.stderr.encoding=UTF-8 -classpath C:\Users\Burak\Desktop\açık\rentacar6\rentacar6\target\classes;C:\Users\Burak\.m2\repository\org\springdoc\springdoc-openapi-starter-webmvc-ui\2.2.0\springdoc-openapi-starter-webmvc-ui-2.2.0.jar;C:\Users\Burak\.m2\repository\org\springdoc\springdoc-openapi-starter-webmvc-api\2.2.0\springdoc-openapi-starter-webmvc-api-2.2.0.jar;C:\Users\Burak\.m2\repository\org\springdoc\springdoc-openapi-starter-common\2.2.0\springdoc-openapi-starter-common-2.2.0.jar;C:\Users\Burak\.m2\repository\io\swagger\core\v3\swagger-core-jakarta\2.2.15\swagger-core-jakarta-2.2.15.jar;C:\Users\Burak\.m2\repository\org\apache\commons\commons-lang3\3.17.0\commons-lang3-3.17.0.jar;C:\Users\Burak\.m2\repository\io\swagger\core\v3\swagger-annotations-jakarta\2.2.15\swagger-annotations-jakarta-2.2.15.jar;C:\Users\Burak\.m2\repository\io\swagger\core\v3\swagger-models-jakarta\2.2.15\swagger-models-jakarta-2.2.15.jar;C:\Users\Burak\.m2\repository\com\fasterxml\jackson\dataformat\jackson-dataformat-yaml\2.18.2\jackson-dataformat-yaml-2.18.2.jar;C:\Users\Burak\.m2\repository\org\webjars\swagger-ui\5.2.0\swagger-ui-5.2.0.jar;C:\Users\Burak\.m2\repository\org\mapstruct\mapstruct\1.5.5.Final\mapstruct-1.5.5.Final.jar;C:\Users\Burak\.m2\repository\org\mapstruct\mapstruct-processor\1.5.5.Final\mapstruct-processor-1.5.5.Final.jar;C:\Users\Burak\.m2\repository\io\jsonwebtoken\jjwt-api\0.12.6\jjwt-api-0.12.6.jar;C:\Users\Burak\.m2\repository\io\jsonwebtoken\jjwt-impl\0.12.6\jjwt-impl-0.12.6.jar;C:\Users\Burak\.m2\repository\io\jsonwebtoken\jjwt-jackson\0.12.6\jjwt-jackson-0.12.6.jar;C:\Users\Burak\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.18.2\jackson-databind-2.18.2.jar;C:\Users\Burak\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.18.2\jackson-annotations-2.18.2.jar;C:\Users\Burak\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.18.2\jackson-core-2.18.2.jar;C:\Users\Burak\.m2\repository\org\springframework\boot\spring-boot-starter-data-jpa\3.4.1\spring-boot-starter-data-jpa-3.4.1.jar;C:\Users\Burak\.m2\repository\org\springframework\boot\spring-boot-starter\3.4.1\spring-boot-starter-3.4.1.jar;C:\Users\Burak\.m2\repository\org\springframework\boot\spring-boot\3.4.1\spring-boot-3.4.1.jar;C:\Users\Burak\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\3.4.1\spring-boot-autoconfigure-3.4.1.jar;C:\Users\Burak\.m2\repository\org\springframework\boot\spring-boot-starter-logging\3.4.1\spring-boot-starter-logging-3.4.1.jar;C:\Users\Burak\.m2\repository\ch\qos\logback\logback-classic\1.5.12\logback-classic-1.5.12.jar;C:\Users\Burak\.m2\repository\ch\qos\logback\logback-core\1.5.12\logback-core-1.5.12.jar;C:\Users\Burak\.m2\repository\org\apache\logging\log4j\log4j-to-slf4j\2.24.3\log4j-to-slf4j-2.24.3.jar;C:\Users\Burak\.m2\repository\org\apache\logging\log4j\log4j-api\2.24.3\log4j-api-2.24.3.jar;C:\Users\Burak\.m2\repository\org\slf4j\jul-to-slf4j\2.0.16\jul-to-slf4j-2.0.16.jar;C:\Users\Burak\.m2\repository\org\yaml\snakeyaml\2.3\snakeyaml-2.3.jar;C:\Users\Burak\.m2\repository\org\springframework\boot\spring-boot-starter-jdbc\3.4.1\spring-boot-starter-jdbc-3.4.1.jar;C:\Users\Burak\.m2\repository\com\zaxxer\HikariCP\5.1.0\HikariCP-5.1.0.jar;C:\Users\Burak\.m2\repository\org\springframework\spring-jdbc\6.2.1\spring-jdbc-6.2.1.jar;C:\Users\Burak\.m2\repository\org\hibernate\orm\hibernate-core\6.6.4.Final\hibernate-core-6.6.4.Final.jar;C:\Users\Burak\.m2\repository\jakarta\transaction\jakarta.transaction-api\2.0.1\jakarta.transaction-api-2.0.1.jar;C:\Users\Burak\.m2\repository\org\jboss\logging\jboss-logging\3.6.1.Final\jboss-logging-3.6.1.Final.jar;C:\Users\Burak\.m2\repository\org\hibernate\common\hibernate-commons-annotations\7.0.3.Final\hibernate-commons-annotations-7.0.3.Final.jar;C:\Users\Burak\.m2\repository\io\smallrye\jandex\3.2.0\jandex-3.2.0.jar;C:\Users\Burak\.m2\repository\com\fasterxml\classmate\1.7.0\classmate-1.7.0.jar;C:\Users\Burak\.m2\repository\net\bytebuddy\byte-buddy\1.15.11\byte-buddy-1.15.11.jar;C:\Users\Burak\.m2\repository\org\glassfish\jaxb\jaxb-runtime\4.0.5\jaxb-runtime-4.0.5.jar;C:\Users\Burak\.m2\repository\org\glassfish\jaxb\jaxb-core\4.0.5\jaxb-core-4.0.5.jar;C:\Users\Burak\.m2\repository\org\eclipse\angus\angus-activation\2.0.2\angus-activation-2.0.2.jar;C:\Users\Burak\.m2\repository\org\glassfish\jaxb\txw2\4.0.5\txw2-4.0.5.jar;C:\Users\Burak\.m2\repository\com\sun\istack\istack-commons-runtime\4.1.2\istack-commons-runtime-4.1.2.jar;C:\Users\Burak\.m2\repository\jakarta\inject\jakarta.inject-api\2.0.1\jakarta.inject-api-2.0.1.jar;C:\Users\Burak\.m2\repository\org\antlr\antlr4-runtime\4.13.0\antlr4-runtime-4.13.0.jar;C:\Users\Burak\.m2\repository\org\springframework\data\spring-data-jpa\3.4.1\spring-data-jpa-3.4.1.jar;C:\Users\Burak\.m2\repository\org\springframework\data\spring-data-commons\3.4.1\spring-data-commons-3.4.1.jar;C:\Users\Burak\.m2\repository\org\springframework\spring-orm\6.2.1\spring-orm-6.2.1.jar;C:\Users\Burak\.m2\repository\org\springframework\spring-context\6.2.1\spring-context-6.2.1.jar;C:\Users\Burak\.m2\repository\org\springframework\spring-tx\6.2.1\spring-tx-6.2.1.jar;C:\Users\Burak\.m2\repository\org\springframework\spring-beans\6.2.1\spring-beans-6.2.1.jar;C:\Users\Burak\.m2\repository\org\slf4j\slf4j-api\2.0.16\slf4j-api-2.0.16.jar;C:\Users\Burak\.m2\repository\org\springframework\spring-aspects\6.2.1\spring-aspects-6.2.1.jar;C:\Users\Burak\.m2\repository\org\aspectj\aspectjweaver\1.9.22.1\aspectjweaver-1.9.22.1.jar;C:\Users\Burak\.m2\repository\org\springframework\boot\spring-boot-starter-validation\3.4.1\spring-boot-starter-validation-3.4.1.jar;C:\Users\Burak\.m2\repository\org\apache\tomcat\embed\tomcat-embed-el\10.1.34\tomcat-embed-el-10.1.34.jar;C:\Users\Burak\.m2\repository\org\hibernate\validator\hibernate-validator\8.0.2.Final\hibernate-validator-8.0.2.Final.jar;C:\Users\Burak\.m2\repository\jakarta\validation\jakarta.validation-api\3.0.2\jakarta.validation-api-3.0.2.jar;C:\Users\Burak\.m2\repository\org\springframework\boot\spring-boot-starter-security\3.4.1\spring-boot-starter-security-3.4.1.jar;C:\Users\Burak\.m2\repository\org\springframework\spring-aop\6.2.1\spring-aop-6.2.1.jar;C:\Users\Burak\.m2\repository\org\springframework\security\spring-security-config\6.4.2\spring-security-config-6.4.2.jar;C:\Users\Burak\.m2\repository\org\springframework\security\spring-security-web\6.4.2\spring-security-web-6.4.2.jar;C:\Users\Burak\.m2\repository\org\springframework\spring-expression\6.2.1\spring-expression-6.2.1.jar;C:\Users\Burak\.m2\repository\org\springframework\boot\spring-boot-starter-web\3.4.1\spring-boot-starter-web-3.4.1.jar;C:\Users\Burak\.m2\repository\org\springframework\boot\spring-boot-starter-json\3.4.1\spring-boot-starter-json-3.4.1.jar;C:\Users\Burak\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jdk8\2.18.2\jackson-datatype-jdk8-2.18.2.jar;C:\Users\Burak\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jsr310\2.18.2\jackson-datatype-jsr310-2.18.2.jar;C:\Users\Burak\.m2\repository\com\fasterxml\jackson\module\jackson-module-parameter-names\2.18.2\jackson-module-parameter-names-2.18.2.jar;C:\Users\Burak\.m2\repository\org\springframework\boot\spring-boot-starter-tomcat\3.4.1\spring-boot-starter-tomcat-3.4.1.jar;C:\Users\Burak\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\10.1.34\tomcat-embed-core-10.1.34.jar;C:\Users\Burak\.m2\repository\org\apache\tomcat\embed\tomcat-embed-websocket\10.1.34\tomcat-embed-websocket-10.1.34.jar;C:\Users\Burak\.m2\repository\org\springframework\spring-web\6.2.1\spring-web-6.2.1.jar;C:\Users\Burak\.m2\repository\io\micrometer\micrometer-observation\1.14.2\micrometer-observation-1.14.2.jar;C:\Users\Burak\.m2\repository\io\micrometer\micrometer-commons\1.14.2\micrometer-commons-1.14.2.jar;C:\Users\Burak\.m2\repository\org\springframework\spring-webmvc\6.2.1\spring-webmvc-6.2.1.jar;C:\Users\Burak\.m2\repository\org\postgresql\postgresql\42.7.4\postgresql-42.7.4.jar;C:\Users\Burak\.m2\repository\org\checkerframework\checker-qual\3.42.0\checker-qual-3.42.0.jar;C:\Users\Burak\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\4.0.2\jakarta.xml.bind-api-4.0.2.jar;C:\Users\Burak\.m2\repository\jakarta\activation\jakarta.activation-api\2.1.3\jakarta.activation-api-2.1.3.jar;C:\Users\Burak\.m2\repository\org\springframework\spring-core\6.2.1\spring-core-6.2.1.jar;C:\Users\Burak\.m2\repository\org\springframework\spring-jcl\6.2.1\spring-jcl-6.2.1.jar;C:\Users\Burak\.m2\repository\org\springframework\security\spring-security-core\6.4.2\spring-security-core-6.4.2.jar;C:\Users\Burak\.m2\repository\org\springframework\security\spring-security-crypto\6.4.2\spring-security-crypto-6.4.2.jar;C:\Users\Burak\.m2\repository\jakarta\annotation\jakarta.annotation-api\2.1.1\jakarta.annotation-api-2.1.1.jar;C:\Users\Burak\.m2\repository\jakarta\persistence\jakarta.persistence-api\3.1.0\jakarta.persistence-api-3.1.0.jar com.rentacar6.rentacar6.Rentacar6Application

  .   ____          _            __ _ _
 /\\ / ___'_ __ _ _(_)_ __  __ _ \ \ \ \
( ( )\___ | '_ | '_| | '_ \/ _` | \ \ \ \
 \\/  ___)| |_)| | | | | || (_| |  ) ) ) )
  '  |____| .__|_| |_|_| |_\__, | / / / /
 =========|_|==============|___/=/_/_/_/

 :: Spring Boot ::                (v3.4.1)

2024-12-23T20:10:54.714+03:00  INFO 2000 --- [rentacar6] [           main] c.r.rentacar6.Rentacar6Application       : Starting Rentacar6Application using Java 21.0.2 with PID 2000 (C:\Users\Burak\Desktop\açık\rentacar6\rentacar6\target\classes started by Burak in C:\Users\Burak\Desktop\açık\rentacar6)
2024-12-23T20:10:54.719+03:00  INFO 2000 --- [rentacar6] [           main] c.r.rentacar6.Rentacar6Application       : No active profile set, falling back to 1 default profile: "default"
2024-12-23T20:10:56.048+03:00  INFO 2000 --- [rentacar6] [           main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-12-23T20:10:56.141+03:00  INFO 2000 --- [rentacar6] [           main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 78 ms. Found 4 JPA repository interfaces.
2024-12-23T20:10:56.990+03:00  INFO 2000 --- [rentacar6] [           main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port 8080 (http)
2024-12-23T20:10:57.011+03:00  INFO 2000 --- [rentacar6] [           main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2024-12-23T20:10:57.011+03:00  INFO 2000 --- [rentacar6] [           main] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.34]
2024-12-23T20:10:57.113+03:00  INFO 2000 --- [rentacar6] [           main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2024-12-23T20:10:57.114+03:00  INFO 2000 --- [rentacar6] [           main] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 2313 ms
2024-12-23T20:10:57.346+03:00  INFO 2000 --- [rentacar6] [           main] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2024-12-23T20:10:57.419+03:00  INFO 2000 --- [rentacar6] [           main] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 6.6.4.Final
2024-12-23T20:10:57.509+03:00  INFO 2000 --- [rentacar6] [           main] o.h.c.internal.RegionFactoryInitiator    : HHH000026: Second-level cache disabled
2024-12-23T20:10:57.910+03:00  INFO 2000 --- [rentacar6] [           main] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2024-12-23T20:10:57.948+03:00  INFO 2000 --- [rentacar6] [           main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2024-12-23T20:10:58.193+03:00  INFO 2000 --- [rentacar6] [           main] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@58e02359
2024-12-23T20:10:58.195+03:00  INFO 2000 --- [rentacar6] [           main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2024-12-23T20:10:58.241+03:00  WARN 2000 --- [rentacar6] [           main] org.hibernate.orm.deprecation            : HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2024-12-23T20:10:58.263+03:00  INFO 2000 --- [rentacar6] [           main] org.hibernate.orm.connections.pooling    : HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 15.6
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2024-12-23T20:11:00.221+03:00  INFO 2000 --- [rentacar6] [           main] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
Hibernate: create table admin (id bigint generated by default as identity, address varchar(255), email varchar(255), first_name varchar(255), last_name varchar(255), password varchar(255), phone varchar(255), role varchar(255), tc_no varchar(255), primary key (id))
Hibernate: create table cars (id bigint generated by default as identity, brand varchar(255), color varchar(255), daily_price float(53) not null, image_url varchar(255), is_available boolean not null, model varchar(255), year integer not null, primary key (id))
Hibernate: create table customers (id bigint generated by default as identity, address varchar(255), email varchar(255) not null, first_name varchar(255), last_name varchar(255), password varchar(255), phone varchar(255), role varchar(255), tc_no varchar(11) not null, primary key (id))
Hibernate: create table orders (id bigint generated by default as identity, rent_date date, return_date date, returned boolean not null, total_price float(53) not null, car_id bigint not null, customer_id bigint not null, primary key (id))
Hibernate: alter table if exists customers drop constraint if exists UKrfbvkrffamfql7cjmen8v976v
2024-12-23T20:11:00.318+03:00  WARN 2000 --- [rentacar6] [           main] o.h.engine.jdbc.spi.SqlExceptionHelper   : SQL Warning Code: 0, SQLState: 00000
2024-12-23T20:11:00.318+03:00  WARN 2000 --- [rentacar6] [           main] o.h.engine.jdbc.spi.SqlExceptionHelper   : constraint "ukrfbvkrffamfql7cjmen8v976v" of relation "customers" does not exist, skipping
Hibernate: alter table if exists customers add constraint UKrfbvkrffamfql7cjmen8v976v unique (email)
Hibernate: alter table if exists customers drop constraint if exists UKgb30uemu7k84ngivv5yjkbagf
2024-12-23T20:11:00.321+03:00  WARN 2000 --- [rentacar6] [           main] o.h.engine.jdbc.spi.SqlExceptionHelper   : SQL Warning Code: 0, SQLState: 00000
2024-12-23T20:11:00.321+03:00  WARN 2000 --- [rentacar6] [           main] o.h.engine.jdbc.spi.SqlExceptionHelper   : constraint "ukgb30uemu7k84ngivv5yjkbagf" of relation "customers" does not exist, skipping
Hibernate: alter table if exists customers add constraint UKgb30uemu7k84ngivv5yjkbagf unique (tc_no)
Hibernate: alter table if exists orders add constraint FKd2p23ixwrrt395glgi9nnbj23 foreign key (car_id) references cars
Hibernate: alter table if exists orders add constraint FKpxtb8awmi0dk6smoh2vp1litg foreign key (customer_id) references customers
2024-12-23T20:11:00.330+03:00  INFO 2000 --- [rentacar6] [           main] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-12-23T20:11:01.196+03:00  WARN 2000 --- [rentacar6] [           main] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-12-23T20:11:01.329+03:00 DEBUG 2000 --- [rentacar6] [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : 35 mappings in 'requestMappingHandlerMapping'
Mapped URL: { [/error]} -> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController#error(HttpServletRequest)
Mapped URL: { [/error], produces [text/html]} -> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController#errorHtml(HttpServletRequest, HttpServletResponse)
Mapped URL: {POST [/api/auth/login]} -> com.rentacar6.rentacar6.controller.AuthenticationController#login(Map)
Mapped URL: {POST [/api/customers]} -> com.rentacar6.rentacar6.controller.CustomerController#createCustomer(Customer)
Mapped URL: {DELETE [/api/customers/{id}]} -> com.rentacar6.rentacar6.controller.CustomerController#deleteCustomer(Long)
Mapped URL: {PUT [/api/admin/cars/{id}/availability]} -> com.rentacar6.rentacar6.controller.AdminController#updateCarAvailability(Long, boolean)
Mapped URL: {GET [/v3/api-docs.yaml], produces [application/vnd.oai.openapi]} -> org.springdoc.webmvc.api.OpenApiWebMvcResource#openapiYaml(HttpServletRequest, String, Locale)
Mapped URL: {GET [/api/cars]} -> com.rentacar6.rentacar6.controller.CarController#getAllCars()
Mapped URL: {GET [/api/orders/filter]} -> com.rentacar6.rentacar6.controller.OrderController#filterOrders(Boolean)
Mapped URL: {GET [/api/orders/{tcNo}]} -> com.rentacar6.rentacar6.controller.OrderController#getOrdersByCustomer(String)
Mapped URL: {GET [/api/orders/returned]} -> com.rentacar6.rentacar6.controller.OrderController#getReturnedOrders()
Mapped URL: {PUT [/api/admin/orders/{id}/return]} -> com.rentacar6.rentacar6.controller.AdminController#returnOrder(Long)
Mapped URL: {GET [/api/auth/login]} -> com.rentacar6.rentacar6.controller.AuthenticationController#loginPage()
Mapped URL: {PUT [/api/customers/{id}]} -> com.rentacar6.rentacar6.controller.CustomerController#updateCustomer(Long, Customer)
Mapped URL: {POST [/api/admin/cars]} -> com.rentacar6.rentacar6.controller.AdminController#addCar(CarDTO)
Mapped URL: {GET [/api/cars/{id}]} -> com.rentacar6.rentacar6.controller.CarController#getCarById(Long)
Mapped URL: {PUT [/api/admin/cars/{id}]} -> com.rentacar6.rentacar6.controller.AdminController#updateCar(Long, CarDTO)
Mapped URL: {POST [/api/admin/cars/upload-image]} -> com.rentacar6.rentacar6.controller.CarImageController#uploadCarImage(MultipartFile)
Mapped URL: {GET [/v3/api-docs/swagger-config], produces [application/json]} -> org.springdoc.webmvc.ui.SwaggerConfigResource#openapiJson(HttpServletRequest)
Mapped URL: {GET [/swagger-ui.html]} -> org.springdoc.webmvc.ui.SwaggerWelcomeWebMvc#redirectToUi(HttpServletRequest)
Mapped URL: {GET [/api/orders/unreturned]} -> com.rentacar6.rentacar6.controller.OrderController#getUnreturnedOrders()
Mapped URL: {DELETE [/api/cars/{id}]} -> com.rentacar6.rentacar6.controller.CarController#deleteCar(Long)
Mapped URL: {GET [/v3/api-docs], produces [application/json]} -> org.springdoc.webmvc.api.OpenApiWebMvcResource#openapiJson(HttpServletRequest, String, Locale)
Mapped URL: {GET [/api/admin/cars]} -> com.rentacar6.rentacar6.controller.AdminController#getAllCars()
Mapped URL: {GET [/api/orders/history/{tcNo}]} -> com.rentacar6.rentacar6.controller.OrderController#getOrderHistory(String)
Mapped URL: {POST [/api/orders]} -> com.rentacar6.rentacar6.controller.OrderController#createOrder(String, Long, String, String)
Mapped URL: {GET [/api/customers]} -> com.rentacar6.rentacar6.controller.CustomerController#getAllCustomers()
Mapped URL: {GET [/api/admin/users]} -> com.rentacar6.rentacar6.controller.AdminController#getAllUsers()
Mapped URL: {DELETE [/api/admin/cars/delete-image/{fileName}]} -> com.rentacar6.rentacar6.controller.CarImageController#deleteCarImage(String)
Mapped URL: {GET [/api/admin/users/{tcNo}]} -> com.rentacar6.rentacar6.controller.AdminController#getUserByTcNo(String)
Mapped URL: {DELETE [/api/admin/cars/{id}]} -> com.rentacar6.rentacar6.controller.AdminController#deleteCar(Long)
Mapped URL: {PUT [/api/cars/{id}]} -> com.rentacar6.rentacar6.controller.CarController#updateCar(Long, CarDTO)
Mapped URL: {GET [/api/customers/{id}]} -> com.rentacar6.rentacar6.controller.CustomerController#getCustomerById(Long)
Mapped URL: {GET [/api/admin/orders]} -> com.rentacar6.rentacar6.controller.AdminController#getOrdersByReturnedStatus(Boolean)
Mapped URL: {POST [/api/cars]} -> com.rentacar6.rentacar6.controller.CarController#createCar(CarDTO)
2024-12-23T20:11:01.419+03:00 DEBUG 2000 --- [rentacar6] [           main] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on: com.rentacar6.rentacar6.controller.AdminController
2024-12-23T20:11:01.441+03:00 DEBUG 2000 --- [rentacar6] [           main] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.rentacar6.rentacar6.controller.AdminController; private static java.lang.String com.rentacar6.rentacar6.controller.AdminController.lambda$getAllUsers$0(com.rentacar6.rentacar6.model.Customer)]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2024-12-23T20:11:01.487+03:00 DEBUG 2000 --- [rentacar6] [           main] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on: com.rentacar6.rentacar6.controller.AdminController
2024-12-23T20:11:01.488+03:00 DEBUG 2000 --- [rentacar6] [           main] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.rentacar6.rentacar6.controller.AdminController; public org.springframework.http.ResponseEntity com.rentacar6.rentacar6.controller.AdminController.updateCarAvailability(java.lang.Long,boolean)]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2024-12-23T20:11:01.490+03:00 DEBUG 2000 --- [rentacar6] [           main] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on: com.rentacar6.rentacar6.controller.AdminController
2024-12-23T20:11:01.491+03:00 DEBUG 2000 --- [rentacar6] [           main] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.rentacar6.rentacar6.controller.AdminController; public org.springframework.http.ResponseEntity com.rentacar6.rentacar6.controller.AdminController.getOrdersByReturnedStatus(java.lang.Boolean)]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2024-12-23T20:11:01.492+03:00 DEBUG 2000 --- [rentacar6] [           main] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on: com.rentacar6.rentacar6.controller.AdminController
2024-12-23T20:11:01.492+03:00 DEBUG 2000 --- [rentacar6] [           main] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.rentacar6.rentacar6.controller.AdminController; public org.springframework.http.ResponseEntity com.rentacar6.rentacar6.controller.AdminController.getAllUsers()]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2024-12-23T20:11:01.493+03:00 DEBUG 2000 --- [rentacar6] [           main] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on: com.rentacar6.rentacar6.controller.AdminController
2024-12-23T20:11:01.493+03:00 DEBUG 2000 --- [rentacar6] [           main] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.rentacar6.rentacar6.controller.AdminController; public org.springframework.http.ResponseEntity com.rentacar6.rentacar6.controller.AdminController.returnOrder(java.lang.Long)]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2024-12-23T20:11:01.494+03:00 DEBUG 2000 --- [rentacar6] [           main] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on: com.rentacar6.rentacar6.controller.AdminController
2024-12-23T20:11:01.497+03:00 DEBUG 2000 --- [rentacar6] [           main] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.rentacar6.rentacar6.controller.AdminController; public org.springframework.http.ResponseEntity com.rentacar6.rentacar6.controller.AdminController.getUserByTcNo(java.lang.String)]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2024-12-23T20:11:01.498+03:00 DEBUG 2000 --- [rentacar6] [           main] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on: com.rentacar6.rentacar6.controller.AdminController
2024-12-23T20:11:01.499+03:00 DEBUG 2000 --- [rentacar6] [           main] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.rentacar6.rentacar6.controller.AdminController; public org.springframework.http.ResponseEntity com.rentacar6.rentacar6.controller.AdminController.deleteCar(java.lang.Long)]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2024-12-23T20:11:01.499+03:00 DEBUG 2000 --- [rentacar6] [           main] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on: com.rentacar6.rentacar6.controller.AdminController
2024-12-23T20:11:01.499+03:00 DEBUG 2000 --- [rentacar6] [           main] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.rentacar6.rentacar6.controller.AdminController; public org.springframework.http.ResponseEntity com.rentacar6.rentacar6.controller.AdminController.addCar(com.rentacar6.rentacar6.dto.CarDTO)]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2024-12-23T20:11:01.499+03:00 DEBUG 2000 --- [rentacar6] [           main] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on: com.rentacar6.rentacar6.controller.AdminController
2024-12-23T20:11:01.500+03:00 DEBUG 2000 --- [rentacar6] [           main] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.rentacar6.rentacar6.controller.AdminController; public org.springframework.http.ResponseEntity com.rentacar6.rentacar6.controller.AdminController.updateCar(java.lang.Long,com.rentacar6.rentacar6.dto.CarDTO)]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2024-12-23T20:11:01.501+03:00 DEBUG 2000 --- [rentacar6] [           main] .PrePostAnnotationSecurityMetadataSource : @org.springframework.security.access.prepost.PreAuthorize("hasRole(\'ADMIN\')") found on: com.rentacar6.rentacar6.controller.AdminController
2024-12-23T20:11:01.501+03:00 DEBUG 2000 --- [rentacar6] [           main] m.DelegatingMethodSecurityMetadataSource : Caching method [CacheKey[com.rentacar6.rentacar6.controller.AdminController; public org.springframework.http.ResponseEntity com.rentacar6.rentacar6.controller.AdminController.getAllCars()]] with attributes [[authorize: 'hasRole('ADMIN')', filter: 'null', filterTarget: 'null']]
2024-12-23T20:11:01.571+03:00  INFO 2000 --- [rentacar6] [           main] eAuthenticationProviderManagerConfigurer : Global AuthenticationManager configured with AuthenticationProvider bean with name authenticationProvider
2024-12-23T20:11:01.572+03:00  WARN 2000 --- [rentacar6] [           main] r$InitializeUserDetailsManagerConfigurer : Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used by Spring Security for automatically configuring username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider. If the current configuration is intentional, to turn off this warning, increase the logging level of 'org.springframework.security.config.annotation.authentication.configuration.InitializeUserDetailsBeanManagerConfigurer' to ERROR
2024-12-23T20:11:02.035+03:00 DEBUG 2000 --- [rentacar6] [           main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Patterns [/webjars/**, /**, /uploads/cars/**, /swagger-ui*/*swagger-initializer.js, /swagger-ui*/**] in 'resourceHandlerMapping'
2024-12-23T20:11:02.172+03:00 DEBUG 2000 --- [rentacar6] [           main] o.s.s.web.DefaultSecurityFilterChain     : Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, LogoutFilter, JwtAuthenticationFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, SessionManagementFilter, ExceptionTranslationFilter, AuthorizationFilter
2024-12-23T20:11:02.312+03:00 DEBUG 2000 --- [rentacar6] [           main] s.w.s.m.m.a.RequestMappingHandlerAdapter : ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2024-12-23T20:11:02.372+03:00 DEBUG 2000 --- [rentacar6] [           main] .m.m.a.ExceptionHandlerExceptionResolver : ControllerAdvice beans: 1 @ExceptionHandler, 1 ResponseBodyAdvice
2024-12-23T20:11:02.655+03:00  INFO 2000 --- [rentacar6] [           main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port 8080 (http) with context path '/'
2024-12-23T20:11:02.673+03:00  INFO 2000 --- [rentacar6] [           main] c.r.rentacar6.Rentacar6Application       : Started Rentacar6Application in 8.58 seconds (process running for 9.214)
Hibernate: insert into admin (address,email,first_name,last_name,password,phone,role,tc_no) values (?,?,?,?,?,?,?,?)
Hibernate: insert into customers (address,email,first_name,last_name,password,phone,role,tc_no) values (?,?,?,?,?,?,?,?)
Hibernate: insert into cars (brand,color,daily_price,image_url,is_available,model,year) values (?,?,?,?,?,?,?)
Hibernate: insert into cars (brand,color,daily_price,image_url,is_available,model,year) values (?,?,?,?,?,?,?)
Hibernate: insert into cars (brand,color,daily_price,image_url,is_available,model,year) values (?,?,?,?,?,?,?)
Data loaded successfully!
